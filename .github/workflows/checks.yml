name: Basic checks

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Set up system
        run: sudo apt update && sudo apt upgrade -y && sudo apt install -y build-essential gcc-multilib clang lld libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu
          components: clippy, rustfmt

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run linter
        run: bun run lint

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-stable-cargo-registry-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: src-tauri/target
          key: ${{ runner.os }}-stable-x86_64-unknown-linux-gnu-cargo-build-tests-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-stable-x86_64-unknown-linux-gnu-cargo-build-tests-

      - name: lint
        run: cd src-tauri && cargo clippy --all-targets --all-features -- -D warnings
